<<<<<<<< HEAD:.vercel/output/static/_nuxt/BYXhVVSu.js
import{_ as b}from"./JpVL55gZ.js";import{_ as g}from"./BKJjjYG_.js";import{g as d,k as w,G as x,J as y,E as T,c as k,b as a,w as i,K as O,L as R,o as h,d as E}from"./Bc1ekGIV.js";import{u as I}from"./DO5H3ly-.js";const V={__name:"login",setup(L){const u=O(),p=d(()=>u.public.mode),t=w({email:null,pwd:null});x(()=>{p.value==="development"&&(t.value={email:u.public.authId,pwd:u.public.authPwd})});const c=d(()=>({notValue:Object.values(t.value).some(o=>o==null||o==="")})),r=I(),f=y(),_=T(),v=async o=>{o.preventDefault();try{const e=await $fetch("/api/auth/login",{method:"POST",body:{...t.value}});if(e){const{uid:s,refreshToken:m,accessToken:l}=e;f.setToken(l),r.add({id:"login-complete",title:"로그인에 성공하였습니다.",icon:"memory:login"}),_.push("/admin")}}catch(e){r.add({id:"login-fail",title:`ERROR ${e.statusCode}`,description:e.data.message||"로그인중에 문제가 발생하였습니다.",icon:"memory:alert-octagon",color:"red"})}};return(o,e)=>{const s=b,m=g,l=R;return h(),k("div",null,[a(l,{name:"auth-body"},{title:i(()=>[E(" LOGIN ")]),content:i(()=>[a(m,{cancelable:!1,validate:c.value,onSubmit:e[2]||(e[2]=n=>v(n)),onOnFocus:e[3]||(e[3]=n=>o.onFocused=!0),submitText:"Login"},{default:i(()=>[a(s,{form:t.value,title:"Email",bind:"email",inputType:"email",onInput:e[0]||(e[0]=n=>t.value.email=n),autocomplete:"user-email",required:""},null,8,["form"]),a(s,{form:t.value,title:"Password",bind:"pwd",inputType:"password",onInput:e[1]||(e[1]=n=>t.value.pwd=n),autocomplete:"current-password",required:""},null,8,["form"])]),_:1},8,["validate"])]),_:1})])}}};export{V as default};
========
import{_ as b}from"./DZp1qsw3.js";import{_ as g}from"./xVRvxd9t.js";import{g as d,k as w,G as x,J as y,E as T,c as k,b as a,w as i,K as O,L as R,o as h,d as E}from"./Jfc5g3KL.js";import{u as I}from"./D6L8QbS9.js";const V={__name:"login",setup(L){const u=O(),p=d(()=>u.public.mode),t=w({email:null,pwd:null});x(()=>{p.value==="development"&&(t.value={email:u.public.authId,pwd:u.public.authPwd})});const c=d(()=>({notValue:Object.values(t.value).some(o=>o==null||o==="")})),r=I(),f=y(),_=T(),v=async o=>{o.preventDefault();try{const e=await $fetch("/api/auth/login",{method:"POST",body:{...t.value}});if(e){const{uid:s,refreshToken:m,accessToken:l}=e;f.setToken(l),r.add({id:"login-complete",title:"로그인에 성공하였습니다.",icon:"memory:login"}),_.push("/admin")}}catch(e){r.add({id:"login-fail",title:`ERROR ${e.statusCode}`,description:e.data.message||"로그인중에 문제가 발생하였습니다.",icon:"memory:alert-octagon",color:"red"})}};return(o,e)=>{const s=b,m=g,l=R;return h(),k("div",null,[a(l,{name:"auth-body"},{title:i(()=>[E(" LOGIN ")]),content:i(()=>[a(m,{cancelable:!1,validate:c.value,onSubmit:e[2]||(e[2]=n=>v(n)),onOnFocus:e[3]||(e[3]=n=>o.onFocused=!0),submitText:"Login"},{default:i(()=>[a(s,{form:t.value,title:"Email",bind:"email",inputType:"email",onInput:e[0]||(e[0]=n=>t.value.email=n),autocomplete:"user-email",required:""},null,8,["form"]),a(s,{form:t.value,title:"Password",bind:"pwd",inputType:"password",onInput:e[1]||(e[1]=n=>t.value.pwd=n),autocomplete:"current-password",required:""},null,8,["form"])]),_:1},8,["validate"])]),_:1})])}}};export{V as default};
>>>>>>>> dev:.vercel/output/static/_nuxt/Bc60pIY-.js
